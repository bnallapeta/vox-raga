apiVersion: "serving.kserve.io/v1beta1"
kind: "InferenceService"
metadata:
  name: "tts-service"
  namespace: "default"
  annotations:
    sidecar.istio.io/inject: "true"
    serving.kserve.io/deploymentMode: "RawDeployment"
    kubernetes.io/change-cause: "Test with root user to verify permission issues"
spec:
  predictor:
    containers:
      - name: tts-service
        image: bnracr.azurecr.io/tts-service:20250318-144134
        imagePullPolicy: Always
        env:
        - name: MODEL_NAME
          value: "tts_models/en/vctk/vits"
        - name: MODEL_DEVICE
          value: "cpu"
        - name: MODEL_COMPUTE_TYPE
          value: "float32"
        - name: SERVER_LOG_LEVEL
          value: "info"
        - name: MODEL_DOWNLOAD_ROOT
          value: "/models"
        - name: HOME
          value: "/root"
        - name: TTS_HOME
          value: "/tmp/tts_cache"
        ports:
        - name: http1
          containerPort: 8000
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: "200m"
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /ready
            port: http1
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: http1
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tts-data
          mountPath: "/models"
        - name: tts-cache
          mountPath: "/tmp/tts_cache"
        securityContext:
          runAsUser: 0
          runAsGroup: 0
    volumes:
    - name: tts-data
      emptyDir: {}
    - name: tts-cache
      emptyDir: {}
    imagePullSecrets:
    - name: acr-secret
